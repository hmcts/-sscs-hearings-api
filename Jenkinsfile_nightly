#!groovy

properties([
  // H allow predefined but random minute see https://en.wikipedia.org/wiki/Cron#Non-standard_characters
  pipelineTriggers([cron('H 22 * * *')]),
  parameters([
          string(name: 'URL_TO_TEST', defaultValue: 'http://sscs-hearings-api-aat.service.core-compute-aat.internal', description: 'The URL you want to run these tests against'),
          string(name: 'SecurityRules',
                  defaultValue: 'https://raw.githubusercontent.com/hmcts/security-test-rules/master/conf/security-rules.conf',
                  description: 'The URL you want to run these tests against'),
  ])
])

@Library("Infrastructure")

def type = "java"
def product = "sscs"
def component = "hearings-api"

def secrets = [
        'sscs-${env}' : [
                secret('idam-s2s-api', 'IDAM_S2S_URL'),
                secret('sscs-s2s-secret', 'IDAM_S2S_AUTH_TOTP_SECRET'),
                secret('s2s-micro', 'IDAM_S2S_AUTH_MICROSERVICE'),
                secret('AppInsightsInstrumentationKey', 'APPINSIGHTS_INSTRUMENTATIONKEY')
        ],
        's2s-${env}' : []
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
    [ $class: 'AzureKeyVaultSecret',
      secretType: 'Secret',
      name: secretName,
      version: '',
      envVariable: envVar
    ]
}

withNightlyPipeline(type, product, component) {
    env.TEST_URL = params.URL_TO_TEST
    env.Rules = params.SecurityRules
    loadVaultSecrets(secrets)
    enableSlackNotifications('#sscs-tech')
    enableFortifyScan()
    enableSecurityScan()
    enableFullFunctionalTest()
    enableMutationTest()

    after('fortify-scan') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/Fortify Scan/**/*'
    }
}
